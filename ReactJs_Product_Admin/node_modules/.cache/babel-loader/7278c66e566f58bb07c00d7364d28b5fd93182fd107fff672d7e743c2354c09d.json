{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\edyoda\\\\web develop 4-7-22\\\\React JS\\\\React-Project-main\\\\src\\\\Component\\\\BarChart\\\\BarChart.jsx\";\nimport React, { Component } from \"react\";\nimport classes from \"./BarChart.module.css\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nclass BarChat extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      featured: \"\",\n      latest: \"\",\n      months: \"\",\n      popular: \"\",\n      performance: \"\"\n    };\n  }\n  componentDidMount() {\n    let chartBarpage = localStorage.getItem(\"accountdata\") === null ? [] : JSON.parse(localStorage.getItem(\"accountdata\"));\n    let chartPerformance = chartBarpage[\"dasbhoardPage\"][\"performance\"];\n    console.log(chartPerformance);\n    this.setState({\n      performance: chartPerformance\n    });\n  }\n  render() {\n    const data = {\n      labels: Object.keys(this.state.performance),\n      datasets: [{\n        label: \"# of Hits\",\n        data: Object.values(this.state.performance),\n        backgroundColor: [\"#4ED6B8\", \"#3889FC\", \"#A8D582\", \"#D7D768\", \"#9D66CC\", \"#F7604D\", \"#DB9C3F\"],\n        borderColor: \"rgb(247,96,77)\",\n        barThickness: 4\n      }]\n    };\n    const options = {\n      legend: {\n        display: true,\n        position: \"top\",\n        labels: {\n          fontColor: \"#fff\"\n        }\n      },\n      scales: {\n        xAxes: [{\n          display: true,\n          ticks: {\n            fontColor: \"#fff\",\n            fontSize: 12\n          }\n        }],\n        yAxes: [{\n          display: true,\n          scaleLabel: {\n            display: true,\n            labelString: \"Hits\",\n            fontColor: \"#fff\",\n            fontSize: 12\n          },\n          ticks: {\n            fontColor: \"#fff\",\n            fontSize: 12\n          }\n        }]\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.tm_bg_primary_dark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: classes.latest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Performance\"), /*#__PURE__*/React.createElement(HorizontalBar, {\n      data: data,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nexport default BarChat;","map":{"version":3,"names":["React","Component","classes","HorizontalBar","BarChat","state","featured","latest","months","popular","performance","componentDidMount","chartBarpage","localStorage","getItem","JSON","parse","chartPerformance","console","log","setState","render","data","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","barThickness","options","legend","display","position","fontColor","scales","xAxes","ticks","fontSize","yAxes","scaleLabel","labelString","tm_bg_primary_dark"],"sources":["C:/Users/PC/Desktop/edyoda/web develop 4-7-22/React JS/React-Project-main/src/Component/BarChart/BarChart.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport classes from \"./BarChart.module.css\";\nimport { HorizontalBar } from \"react-chartjs-2\";\n\nclass BarChat extends Component {\n  state = {\n    featured: \"\",\n    latest: \"\",\n    months: \"\",\n    popular: \"\",\n    performance: \"\",\n  };\n  componentDidMount() {\n    let chartBarpage =\n      localStorage.getItem(\"accountdata\") === null\n        ? []\n        : JSON.parse(localStorage.getItem(\"accountdata\"));\n    let chartPerformance = chartBarpage[\"dasbhoardPage\"][\"performance\"];\n    console.log(chartPerformance);\n    this.setState({\n      performance: chartPerformance,\n    });\n  }\n\n  render() {\n    const data = {\n      labels: Object.keys(this.state.performance),\n      datasets: [\n        {\n          label: \"# of Hits\",\n          data: Object.values(this.state.performance),\n          backgroundColor: [\n            \"#4ED6B8\",\n            \"#3889FC\",\n            \"#A8D582\",\n            \"#D7D768\",\n            \"#9D66CC\",\n            \"#F7604D\",\n            \"#DB9C3F\",\n          ],\n          borderColor: \"rgb(247,96,77)\",\n\n          barThickness: 4,\n        },\n      ],\n    };\n    const options = {\n      legend: {\n        display: true,\n        position: \"top\",\n        labels: {\n          fontColor: \"#fff\",\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            display: true,\n\n            ticks: {\n              fontColor: \"#fff\",\n              fontSize: 12,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: \"Hits\",\n              fontColor: \"#fff\",\n              fontSize: 12,\n            },\n            ticks: {\n              fontColor: \"#fff\",\n              fontSize: 12,\n            },\n          },\n        ],\n      },\n    };\n\n    return (\n      <div className={classes.tm_bg_primary_dark}>\n        <h2 className={classes.latest}>Performance</h2>\n        <HorizontalBar data={data} options={options} />\n      </div>\n    );\n  }\n}\n\nexport default BarChat;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,MAAMC,OAAO,SAASH,SAAS,CAAC;EAAA;IAAA;IAAA,KAC9BI,KAAK,GAAG;MACNC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE;IACf,CAAC;EAAA;EACDC,iBAAiB,GAAG;IAClB,IAAIC,YAAY,GACdC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,KAAK,IAAI,GACxC,EAAE,GACFC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;IACrD,IAAIG,gBAAgB,GAAGL,YAAY,CAAC,eAAe,CAAC,CAAC,aAAa,CAAC;IACnEM,OAAO,CAACC,GAAG,CAACF,gBAAgB,CAAC;IAC7B,IAAI,CAACG,QAAQ,CAAC;MACZV,WAAW,EAAEO;IACf,CAAC,CAAC;EACJ;EAEAI,MAAM,GAAG;IACP,MAAMC,IAAI,GAAG;MACXC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACpB,KAAK,CAACK,WAAW,CAAC;MAC3CgB,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,WAAW;QAClBL,IAAI,EAAEE,MAAM,CAACI,MAAM,CAAC,IAAI,CAACvB,KAAK,CAACK,WAAW,CAAC;QAC3CmB,eAAe,EAAE,CACf,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;QACDC,WAAW,EAAE,gBAAgB;QAE7BC,YAAY,EAAE;MAChB,CAAC;IAEL,CAAC;IACD,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE;QACNC,OAAO,EAAE,IAAI;QACbC,QAAQ,EAAE,KAAK;QACfZ,MAAM,EAAE;UACNa,SAAS,EAAE;QACb;MACF,CAAC;MACDC,MAAM,EAAE;QACNC,KAAK,EAAE,CACL;UACEJ,OAAO,EAAE,IAAI;UAEbK,KAAK,EAAE;YACLH,SAAS,EAAE,MAAM;YACjBI,QAAQ,EAAE;UACZ;QACF,CAAC,CACF;QACDC,KAAK,EAAE,CACL;UACEP,OAAO,EAAE,IAAI;UACbQ,UAAU,EAAE;YACVR,OAAO,EAAE,IAAI;YACbS,WAAW,EAAE,MAAM;YACnBP,SAAS,EAAE,MAAM;YACjBI,QAAQ,EAAE;UACZ,CAAC;UACDD,KAAK,EAAE;YACLH,SAAS,EAAE,MAAM;YACjBI,QAAQ,EAAE;UACZ;QACF,CAAC;MAEL;IACF,CAAC;IAED,oBACE;MAAK,SAAS,EAAEtC,OAAO,CAAC0C,kBAAmB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACzC;MAAI,SAAS,EAAE1C,OAAO,CAACK,MAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,iBAAiB,eAC/C,oBAAC,aAAa;MAAC,IAAI,EAAEe,IAAK;MAAC,OAAO,EAAEU,OAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CAC3C;EAEV;AACF;AAEA,eAAe5B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}